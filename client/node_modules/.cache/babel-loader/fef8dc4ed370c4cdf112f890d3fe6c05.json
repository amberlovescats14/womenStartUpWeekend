{"ast":null,"code":"var _jsxFileName = \"/Users/amberjones/Desktop/Workspace/Chat_App-MERN/client/src/components/post/Post.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Spinner from '../layout/Spinner';\nimport PostItem from '../../containers/posts/PostItemContainer';\nimport CommentForm from '../../containers/post/CommentFormContainer';\nimport CommentItem from '../../containers/post/CommentItemContainer';\n\nconst Post = props => {\n  const getPost = props.getPost,\n        match = props.match,\n        post = props.post,\n        loading = props.loading;\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]);\n  return loading || post === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"container postsOutside\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/posts\",\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Back To Posts\"), React.createElement(PostItem, {\n    eachPost: post,\n    showActions: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(CommentForm, {\n    postId: post._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"comments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, post.comments.map(comment => React.createElement(CommentItem, {\n    key: comment._id,\n    comment: comment,\n    postId: post._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }))));\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\nexport default Post;","map":{"version":3,"sources":["/Users/amberjones/Desktop/Workspace/Chat_App-MERN/client/src/components/post/Post.js"],"names":["React","Fragment","useEffect","Link","PropTypes","Spinner","PostItem","CommentForm","CommentItem","Post","props","getPost","match","post","loading","params","id","_id","comments","map","comment","propTypes","func","isRequired","object"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,0CAArB;AACA,OAAOC,WAAP,MAAwB,4CAAxB;AACA,OAAOC,WAAP,MAAwB,4CAAxB;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AAAA,QACZC,OADY,GACqBD,KADrB,CACZC,OADY;AAAA,QACHC,KADG,GACqBF,KADrB,CACHE,KADG;AAAA,QACIC,IADJ,GACqBH,KADrB,CACIG,IADJ;AAAA,QACUC,OADV,GACqBJ,KADrB,CACUI,OADV;AAEpBZ,EAAAA,SAAS,CAAC,MAAK;AACbS,IAAAA,OAAO,CAACC,KAAK,CAACG,MAAN,CAAaC,EAAd,CAAP;AACD,GAFQ,EAEP,CAACL,OAAD,CAFO,CAAT;AAGA,SACEG,OAAO,IAAID,IAAI,KAAK,IAApB,GAA2B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA3B,GACA;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAkB,IAAA,SAAS,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,EAEA,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEA,IAApB;AAA0B,IAAA,WAAW,EAAE,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,EAGA,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEA,IAAI,CAACI,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,EAIA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCJ,IAAI,CAACK,QAAL,CAAcC,GAAd,CAAkBC,OAAO,IACxB,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACH,GAA1B;AAA+B,IAAA,OAAO,EAAEG,OAAxC;AAAiD,IAAA,MAAM,EAAEP,IAAI,CAACI,GAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD,CAJA,CAFF;AAaD,CAlBD;;AAoBAR,IAAI,CAACY,SAAL,GAAiB;AACfV,EAAAA,OAAO,EAAEP,SAAS,CAACkB,IAAV,CAAeC,UADT;AAEfV,EAAAA,IAAI,EAAET,SAAS,CAACoB,MAAV,CAAiBD;AAFR,CAAjB;AAKA,eAAed,IAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport Spinner from '../layout/Spinner'\nimport PostItem from '../../containers/posts/PostItemContainer'\nimport CommentForm from '../../containers/post/CommentFormContainer'\nimport CommentItem from '../../containers/post/CommentItemContainer'\n\nconst Post = props => {\n  const { getPost, match, post, loading} = props\n  useEffect(()=> {\n    getPost(match.params.id)\n  },[getPost])\n  return (\n    loading || post === null ? <Spinner/> : \n    <div className=\"container postsOutside\">\n    <Link to='/posts' className=\"btn\">Back To Posts</Link>\n    <PostItem eachPost={post} showActions={false}/>\n    <CommentForm postId={post._id} />\n    <div className=\"comments\">\n    {post.comments.map(comment=> (\n      <CommentItem key={comment._id} comment={comment} postId={post._id}/>\n    ))}\n    </div>\n    </div>\n  )\n}\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n}\n\nexport default Post\n"]},"metadata":{},"sourceType":"module"}
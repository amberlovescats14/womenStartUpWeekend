{"ast":null,"code":"var _jsxFileName = \"/Users/amberjones/Desktop/Workspace/Chat_App-MERN/client/src/components/posts/PostItem.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\n\nconst PostItem = props => {\n  debugger;\n  const auth = props.auth,\n        loading = props.loading,\n        addLike = props.addLike,\n        removeLike = props.removeLike,\n        deletePost = props.deletePost;\n  const _props$eachPost = props.eachPost,\n        _id = _props$eachPost._id,\n        name = _props$eachPost.name,\n        avatar = _props$eachPost.avatar,\n        user = _props$eachPost.user,\n        likes = _props$eachPost.likes,\n        comments = _props$eachPost.comments,\n        date = _props$eachPost.date,\n        text = _props$eachPost.text;\n  console.log(\"PROPS: \", props);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"post bg-white p-1 my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"profile.html\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"round-img\",\n    src: avatar,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, name))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, text), React.createElement(\"p\", {\n    className: \"post-date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Posted on \", React.createElement(Moment, {\n    format: \"MM/DD/YYY\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, date)), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-light\",\n    onClick: e => addLike(_id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-thumbs-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), \" \", ' ', likes.length > 0 && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, likes.length)), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-light\",\n    onClick: e => removeLike(_id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-thumbs-down\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(Link, {\n    to: \"/post/\".concat(_id),\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Discussion\", comments.length > 0 && React.createElement(\"span\", {\n    className: \"comment-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \" \", comments.length)), !loading && user === auth.user._id && React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-danger\",\n    onClick: e => deletePost(_id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-times\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })))));\n};\n\nPostItem.propTypes = {\n  eachPost: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired\n};\nexport default PostItem;","map":{"version":3,"sources":["/Users/amberjones/Desktop/Workspace/Chat_App-MERN/client/src/components/posts/PostItem.js"],"names":["React","Fragment","PropTypes","Link","Moment","PostItem","props","auth","loading","addLike","removeLike","deletePost","eachPost","_id","name","avatar","user","likes","comments","date","text","console","log","e","length","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport Moment from 'react-moment'\n\nconst PostItem = props => {\n  debugger\n  const { auth, loading, addLike, removeLike, deletePost } = props\n  const { _id, name, avatar, user, likes, comments, date, text} = props.eachPost\n  console.log(`PROPS: `, props)\n  return (\n    <Fragment>\n         \n        <div className=\"post bg-white p-1 my-1\">\n          <div>\n            <a href=\"profile.html\">\n              <img\n                className=\"round-img\"\n                src={avatar}\n                alt=\"\"\n              />\n              <h4>{name}</h4>\n            </a>\n          </div>\n          <div>\n            <p className=\"my-1\">\n              {text}\n            </p>\n             <p className=\"post-date\">\n                Posted on <Moment format=\"MM/DD/YYY\">{date}</Moment>\n            </p>\n            <button type=\"button\" className=\"btn btn-light\"\n            onClick={ e => addLike(_id)}>\n              <i className=\"fas fa-thumbs-up\"></i> {' '}\n              {likes.length > 0 && (\n                <span>{likes.length}</span>\n              )}\n            </button>\n            <button type=\"button\" className=\"btn btn-light\"\n            onClick={e => removeLike(_id)}>\n              <i className=\"fas fa-thumbs-down\"></i>\n            </button>\n            <Link to={`/post/${_id}`} className=\"btn btn-primary\">\n              Discussion \n              {comments.length > 0 && (\n                <span className='comment-count'> {comments.length}</span>\n                )}\n            </Link>\n            {/* this is the post user and the logged in user*/}\n            {!loading && user === auth.user._id && (\n            <button      \n            type=\"button\"\n            className=\"btn btn-danger\"\n            onClick={e => deletePost(_id)}>\n            <i className=\"fas fa-times\"></i>\n          </button>\n            )}\n          </div>\n        </div>\n    </Fragment>\n  )\n}\n\nPostItem.propTypes = {\n  eachPost: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired\n}\n\nexport default PostItem\n"]},"metadata":{},"sourceType":"module"}
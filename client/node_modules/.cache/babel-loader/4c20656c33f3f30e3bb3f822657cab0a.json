{"ast":null,"code":"var _jsxFileName = \"/Users/amberjones/Desktop/Workspace/Chat_App-MERN/client/src/components/profile/ProfileGitHub.js\";\nimport React, { useEffect } from 'react';\nimport Spinner from '../layout/Spinner';\nimport PropTypes from 'prop-types';\n\nconst ProfileGitHub = props => {\n  const username = props.username,\n        repos = props.repos,\n        getGithubRepos = props.getGithubRepos;\n  console.log(props);\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos, username]);\n  return React.createElement(\"div\", {\n    className: \"profile-github\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-primary my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"GitHub Repos:\"), repos === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }) : repos.map((r, i) => React.createElement(\"div\", {\n    key: repos._id,\n    className: \"repo bg-white p-1 my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: r.html_url,\n    target: \"_bland\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, r.name)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, r.description)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"badge badge-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Stars: \", r.stargazers_count), React.createElement(\"li\", {\n    className: \"badge badge-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Watchers: \", r.watchers_count), React.createElement(\"li\", {\n    className: \"badge badge-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Forks: \", r.forks_count))))));\n};\n\nProfileGitHub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\nexport default ProfileGitHub;","map":{"version":3,"sources":["/Users/amberjones/Desktop/Workspace/Chat_App-MERN/client/src/components/profile/ProfileGitHub.js"],"names":["React","useEffect","Spinner","PropTypes","ProfileGitHub","props","username","repos","getGithubRepos","console","log","map","r","i","_id","html_url","name","description","stargazers_count","watchers_count","forks_count","propTypes","func","isRequired","array","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAAA,QACrBC,QADqB,GACeD,KADf,CACrBC,QADqB;AAAA,QACXC,KADW,GACeF,KADf,CACXE,KADW;AAAA,QACJC,cADI,GACeH,KADf,CACJG,cADI;AAE7BC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACAJ,EAAAA,SAAS,CAAC,MAAK;AACbO,IAAAA,cAAc,CAACF,QAAD,CAAd;AACD,GAFQ,EAEP,CAACE,cAAD,EAAiBF,QAAjB,CAFO,CAAT;AAGA,SACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEGC,KAAK,KAAK,IAAV,GACD,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,GAEDA,KAAK,CAACI,GAAN,CAAU,CAACC,CAAD,EAAIC,CAAJ,KACR;AAAK,IAAA,GAAG,EAAEN,KAAK,CAACO,GAAhB;AAAqB,IAAA,SAAS,EAAC,wBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAEF,CAAC,CAACG,QAAX;AAAqB,IAAA,MAAM,EAAC,QAA5B;AAAqC,IAAA,GAAG,EAAC,qBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgEH,CAAC,CAACI,IAAlE,CADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIJ,CAAC,CAACK,WAAN,CAJF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACQL,CAAC,CAACM,gBADV,CADF,EAGE;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACWN,CAAC,CAACO,cADb,CAHF,EAKE;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACQP,CAAC,CAACQ,WADV,CALF,CADF,CAPF,CADF,CAJF,CADF;AA2BD,CAjCD;;AAmCAhB,aAAa,CAACiB,SAAd,GAA0B;AACxBb,EAAAA,cAAc,EAAEL,SAAS,CAACmB,IAAV,CAAeC,UADP;AAExBhB,EAAAA,KAAK,EAAEJ,SAAS,CAACqB,KAAV,CAAgBD,UAFC;AAGxBjB,EAAAA,QAAQ,EAAEH,SAAS,CAACsB,MAAV,CAAiBF;AAHH,CAA1B;AAMA,eAAenB,aAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport Spinner from '../layout/Spinner'\nimport PropTypes from 'prop-types'\n\nconst ProfileGitHub = props => {\n  const { username, repos, getGithubRepos } = props\n  console.log(props)\n  useEffect(()=> {\n    getGithubRepos(username)\n  },[getGithubRepos, username])\n  return (\n    <div className=\"profile-github\">\n      <h2 className=\"text-primary my-1\">GitHub Repos:</h2>\n      {repos === null ?\n      <Spinner/>:\n      repos.map((r, i)=> (\n        <div key={repos._id} className=\"repo bg-white p-1 my-1\">\n          <div>\n            <h4>\n              <a href={r.html_url} target=\"_bland\" rel=\"noopener noreferrer\">{r.name}</a>\n            </h4>\n            <p>{r.description}</p>\n          </div>\n          <div>\n            <ul>\n              <li className=\"badge badge-primary\">\n              Stars: {r.stargazers_count}</li>\n              <li className=\"badge badge-dark\">\n              Watchers: {r.watchers_count}</li>\n              <li className=\"badge badge-light\">\n              Forks: {r.forks_count}</li>\n            </ul>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nProfileGitHub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired,\n}\n\nexport default ProfileGitHub\n"]},"metadata":{},"sourceType":"module"}